---
# tasks file for hw_oceanstor_management
- name: install-management Check the user input params
  fail:
    msg: "You need input the param: {{ item.msg }}."
  when:  not {{ item.varname }}
  with_items:
    - varname: hw_ha_deploy_mode
      msg: hw_ha_deploy_mode
    - varname: hw_net_mode
      msg: hw_net_mode
    - varname: hw_master_float_address
      msg: hw_master_float_address
    - varname: hw_web_password
      msg: hw_web_password
    - varname: hw_master_local_address
      msg: hw_master_local_address
    - varname: hw_master_root_login_pwd
      msg: hw_master_root_login_pwd
    - varname: hw_remote_address
      msg: hw_remote_address
    - varname: hw_remote_root_login_pwd
      msg: hw_remote_root_login_pwd
  tags: install-management

- name: install-management Make sure dir /opt/fusionstorage/repository/deploymanager_pkg/DSwareSoft/ not exists
  file:
    path: "{{ oceanstor_deploymanager_dir }}"
    state: absent
  become: yes
  tags: install-management

- name: install-management Upload OceanStor artifact file to the first FSM node
  copy:
    src: "{{ item }}"
    dest: "{{ oceanstor_deploymanager_dir }}"
    owner: root
    group: root
    mode: u+rw,g-wx,o-rwx
  become: yes
  tags: install-management
  with_fileglob:
      - "{{ oceanstor_artifact_dir }}*{{oceanstor_artifact_version}}*.tar.gz"

- name: install-management Find deploymanager folder path
  command: find {{ oceanstor_deploymanager_dir }} -name "*{{oceanstor_artifact_version}}*"
  register: oceanstor_artifact_name
  tags: install-management
  become: yes

- name: install-management Show OceanStor artifact file name
  debug: var=oceanstor_artifact_name
  become: yes
  tags: install-management

- name: install-management Extract OceanStor artifact into /opt/fusionstorage/repository/deploymanager_pkg/DSwareSoft/
  unarchive:
    src: "{{ oceanstor_artifact_name.stdout }}"
    dest: "{{ oceanstor_deploymanager_dir }}"
    remote_src: yes
  become: yes
  tags: install-management

- name: install-management Find deploymanager folder path
  command: find {{ oceanstor_deploymanager_dir }} -name "deploymanager"
  register: deploymanager_path
  become: yes
  tags: install-management

- name: install-management show deploymanager_path
  debug: var=deploymanager_path
  tags: install-management

- name: install-management Copy deploymanager files to folder /opt/fusionstorage/repository/deploymanager_pkg/DSwareSoft/
  shell: "cp -r {{ deploymanager_path.stdout }}/* {{ oceanstor_deploymanager_dir }}"
  become: yes
  tags: install-management

- include: fsm-master.yml
  tags:
    - install-management
    - fsm-master

- include: fsm-slave.yml
  tags:
    - install-management
    - fsm-slave

- name: install-management Check params get from node
  fail:
    msg: "There have some params not find: {{ item.msg }} ."
  when: " not ( item.varname )"
  with_items:
    - varname: manager_local_port
      msg: Internal management network port of FSM 1
    - varname: manager_gateway
      msg: Internal management gateway
    - varname: manager_mask
      msg: Subnet mask of the internal management IP address
    - varname: service_local_port
      msg: External management network port of FSM 1
    - varname: service_gateway
      msg: External management gateway
    - varname: service_mask
      msg: Subnet mask of the external management IP address
    - varname: local_host_name
      msg: Host name of FSM 1
    - varname: manager_remote_port
      msg: Internal management network port of FSM 2
    - varname: remote_host_name
      msg: Host name of FSM 2
  tags: install-management

- name: install-management Generate HAInfoFromInstallTool.properties in remote folder /home
  template:
    src: "HAInfoFromInstallTool.properties-slave.j2"
    dest: "/home/HAInfoFromInstallTool.properties"
  become: yes
  delegate_to: "{{ groups['fsm-slave'][0] }}"
  when: "( ha_deploy_mode ) == 'double'"
  tags:
    - install-management
    - fsm-slave

- name: install-management Generate HAInfoFromInstallTool.properties in master folder /home
  template:
    src: "HAInfoFromInstallTool.properties.j2"
    dest: "/home/HAInfoFromInstallTool.properties"
  become: yes
  tags: install-management

- name: install-management Run install.sh on the first FSM node
  command: "sh {{ oceanstor_deploymanager_dir }}install.sh"
  become: yes
  tags: install-management
